{"version":3,"file":"index.js","sources":["../src/RenderContext.ts","../src/RenderManager.ts","../src/components/Canvas.tsx","../node_modules/nanoid/index.prod.js","../src/RenderObject.ts","../src/components/Rect.tsx","../src/components/Text.tsx","../src/components/Arc.tsx"],"sourcesContent":[null,null,null,"// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (false) {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n",null,null,null,null],"names":["createContext","useRef","useState","useMemo","useEffect","React","useContext"],"mappings":"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"}